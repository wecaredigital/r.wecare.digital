# Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
# SPDX-License-Identifier: MIT-0
#
# Permission is hereby granted, free of charge, to any person obtaining a copy of this
# software and associated documentation files (the "Software"), to deal in the Software
# without restriction, including without limitation the rights to use, copy, modify,
# merge, publish, distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
# PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE
# SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

openapi: "3.0.1"
info:
  title: "URL Shortener API"
  version: "1.0.0"
servers:
- url: "https://xbj96ig388.execute-api.ap-south-1.amazonaws.com/{basePath}"
  variables:
    basePath:
      default: "Prod"
paths:
  /{linkId}:
    get:
      parameters:
      - name: "linkId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "301":
          description: "301 response"
          headers:
            Cache-Control:
              schema:
                type: "string"
            Location:
              schema:
                type: "string"
          content: {}
  /app:
    get:
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Cache-Control:
              schema:
                type: "string"
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content: {}
      security:
      - UserAuthorizer: []
    post:
      parameters:
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PostBody"
        required: true
      responses:
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content: {}
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content: {}
      security:
      - UserAuthorizer: []
    options:
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /app/{linkId}:
    put:
      parameters:
      - name: "linkId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/PutBody"
        required: true
      responses:
        "400":
          description: "400 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content: {}
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content: {}
      security:
      - UserAuthorizer: []
    delete:
      parameters:
      - name: "linkId"
        in: "path"
        required: true
        schema:
          type: "string"
      - name: "Authorization"
        in: "header"
        required: true
        schema:
          type: "string"
      responses:
        "400":
          description: "400 response"
          content: {}
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
          content: {}
      security:
      - UserAuthorizer: []
    options:
      parameters:
      - name: "linkId"
        in: "path"
        required: true
        schema:
          type: "string"
      responses:
        "200":
          description: "200 response"
          headers:
            Access-Control-Allow-Origin:
              schema:
                type: "string"
            Access-Control-Allow-Methods:
              schema:
                type: "string"
            Access-Control-Allow-Headers:
              schema:
                type: "string"
          content: {}
  /:
    get:
      responses:
        "302":
          description: "302 response"
          headers:
            Location:
              schema:
                type: "string"
          content: {}
components:
  schemas:
    PostBody:
      required:
      - "id"
      - "url"
      type: "object"
      properties:
        id:
          type: "string"
        url:
          pattern: "^https?://[-a-zA-Z0-9@:%._\\+~#=]{2,256}\\.[a-z]{2,9}\\b([-a-zA-Z0-9@:%_\\\
            +.~#?&//=]*)"
          type: "string"
    PutBody:
      required:
      - "id"
      - "owner"
      - "timestamp"
      - "url"
      type: "object"
      properties:
        owner:
          type: "string"
        id:
          type: "string"
        url:
          pattern: "/((([A-Za-z]{3,9}:(?:\\/\\/)?)(?:[-;:&=\\+\\$,\\w]+@)?[A-Za-z0-9.-]+|(?:www.|[-;:&=\\\
            +\\$,\\w]+@)[A-Za-z0-9.-]+)((?:\\/[\\+~%\\/.\\w-_]*)?\\??(?:[-\\+=&;%@.\\\
            w_]*)#?(?:[\\w]*))?)/"
          type: "string"
        timestamp:
          type: "string"
  securitySchemes:
    UserAuthorizer:
      type: "apiKey"
      name: "Authorization"
      in: "header"
      x-amazon-apigateway-authtype: "cognito_user_pools"
